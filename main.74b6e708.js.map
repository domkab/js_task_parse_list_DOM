{"version":3,"sources":["scripts/main.js"],"names":["nodeList","document","querySelectorAll","createEmployeeArray","employees","employeeArray","map","employee","salary","getAttribute","replace","empName","textContent","trim","position","age","element","parseInt","sortUpdateDom","arr","sort","a","b","ul","querySelector","innerHTML","forEach","appendChild"],"mappings":";AAAA,aAwCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAtCA,IAAMA,EAAWC,SAASC,iBAAiB,mBAE3C,SAASC,EAAoBC,GAmBpBC,OAlBe,EAAID,GAAWE,IAAI,SAAAC,GACjCC,IAAAA,EAASD,EACZE,aAAa,eACbC,QAAQ,WAAY,IAEjBC,EAAUJ,EAASK,YAAYC,OAC/BC,EAAWP,EAASE,aAAa,iBACjCM,EAAMR,EAASE,aAAa,YAE3B,MAAA,CACLO,QAAST,EACTI,QAAAA,EACAG,SAAAA,EACAN,OAAQS,SAAST,GACjBO,IAAAA,KASN,SAASG,EAAcC,GACrBA,EAAIC,KAAK,SAACC,EAAGC,GAAMA,OAAAA,EAAEd,OAASa,EAAEb,SAE1Be,IAAAA,EAAKtB,SAASuB,cAAc,MAElCD,EAAGE,UAAY,GAEfN,EAAIO,QAAQ,SAAAnB,GACVgB,EAAGI,YAAYpB,EAASS,WAV5Bb,EAAoBH,GAcpBkB,EAAcf,EAAoBH","file":"main.74b6e708.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst nodeList = document.querySelectorAll('li[data-salary]');\n\nfunction createEmployeeArray(employees) {\n  const employeeArray = [...employees].map(employee => {\n    const salary = employee\n      .getAttribute('data-salary')\n      .replace(/[^\\d.-]/g, '');\n\n    const empName = employee.textContent.trim();\n    const position = employee.getAttribute('data-position');\n    const age = employee.getAttribute('data-age');\n\n    return {\n      element: employee,\n      empName,\n      position,\n      salary: parseInt(salary),\n      age,\n    };\n  });\n\n  return employeeArray;\n}\n\ncreateEmployeeArray(nodeList);\n\nfunction sortUpdateDom(arr) {\n  arr.sort((a, b) => b.salary - a.salary);\n\n  const ul = document.querySelector('ul');\n\n  ul.innerHTML = '';\n\n  arr.forEach(employee => {\n    ul.appendChild(employee.element);\n  });\n}\n\nsortUpdateDom(createEmployeeArray(nodeList));\n"]}